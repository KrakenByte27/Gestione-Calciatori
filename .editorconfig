[*.cs]

# CS8622: Il supporto dei valori Null dei tipi riferimento nel tipo di parametro non corrisponde al delegato di destinazione, probabilmente a causa degli attributi del supporto dei valori Null.
dotnet_diagnostic.CS8622.severity = suggestion

# CS8625: Non è possibile convertire il valore letterale Null in tipo riferimento che non ammette i valori Null.
dotnet_diagnostic.CS8625.severity = suggestion

# CS8618: Il campo non nullable deve contenere un valore non Null all'uscita dal costruttore. Provare a dichiararlo come nullable.
dotnet_diagnostic.CS8618.severity = suggestion

# CS8604: Possibile argomento di riferimento Null.
dotnet_diagnostic.CS8604.severity = suggestion

[*.cs]
#### Stili di denominazione ####

# Regole di denominazione

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Specifiche dei simboli

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers = 

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers = 

# Stili di denominazione

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix = 
dotnet_naming_style.begins_with_i.word_separator = 
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case
csharp_indent_labels = one_less_than_current

# CS8600: Conversione del valore letterale Null o di un possibile valore Null in un tipo che non ammette i valori Null.
dotnet_diagnostic.CS8600.severity = suggestion

# CS8602: Dereferenziamento di un possibile riferimento Null.
dotnet_diagnostic.CS8602.severity = suggestion

[*.vb]
#### Stili di denominazione ####

# Regole di denominazione

dotnet_naming_rule.interface_should_be_inizia_con_i.severity = suggestion
dotnet_naming_rule.interface_should_be_inizia_con_i.symbols = interface
dotnet_naming_rule.interface_should_be_inizia_con_i.style = inizia_con_i

dotnet_naming_rule.tipi_should_be_notazione_pascal.severity = suggestion
dotnet_naming_rule.tipi_should_be_notazione_pascal.symbols = tipi
dotnet_naming_rule.tipi_should_be_notazione_pascal.style = notazione_pascal

dotnet_naming_rule.membri_non_di_campo_should_be_notazione_pascal.severity = suggestion
dotnet_naming_rule.membri_non_di_campo_should_be_notazione_pascal.symbols = membri_non_di_campo
dotnet_naming_rule.membri_non_di_campo_should_be_notazione_pascal.style = notazione_pascal

# Specifiche dei simboli

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, friend, private, protected, protected_friend, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.tipi.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.tipi.applicable_accessibilities = public, friend, private, protected, protected_friend, private_protected
dotnet_naming_symbols.tipi.required_modifiers = 

dotnet_naming_symbols.membri_non_di_campo.applicable_kinds = property, event, method
dotnet_naming_symbols.membri_non_di_campo.applicable_accessibilities = public, friend, private, protected, protected_friend, private_protected
dotnet_naming_symbols.membri_non_di_campo.required_modifiers = 

# Stili di denominazione

dotnet_naming_style.inizia_con_i.required_prefix = I
dotnet_naming_style.inizia_con_i.required_suffix = 
dotnet_naming_style.inizia_con_i.word_separator = 
dotnet_naming_style.inizia_con_i.capitalization = pascal_case

dotnet_naming_style.notazione_pascal.required_prefix = 
dotnet_naming_style.notazione_pascal.required_suffix = 
dotnet_naming_style.notazione_pascal.word_separator = 
dotnet_naming_style.notazione_pascal.capitalization = pascal_case

dotnet_naming_style.notazione_pascal.required_prefix = 
dotnet_naming_style.notazione_pascal.required_suffix = 
dotnet_naming_style.notazione_pascal.word_separator = 
dotnet_naming_style.notazione_pascal.capitalization = pascal_case

[*.{cs,vb}]
dotnet_style_operator_placement_when_wrapping = beginning_of_line
end_of_line = crlf